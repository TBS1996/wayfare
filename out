n: &str) -> Option<DataType> {
    |        ^^^^^^^^^

warning: `wayfare` (bin "wayfare") generated 7 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.05s
     Running `target/debug/wayfare`
[src/main.rs:145:17] &select = Select {
    distinct: None,
    top: None,
    projection: [
        UnnamedExpr(
            Identifier(
                Ident {
                    value: "id",
                    quote_style: None,
                },
            ),
        ),
        UnnamedExpr(
            Identifier(
                Ident {
                    value: "createdat",
                    quote_style: None,
                },
            ),
        ),
        UnnamedExpr(
            Identifier(
                Ident {
                    value: "updatedat",
                    quote_style: None,
                },
            ),
        ),
        ExprWithAlias {
            expr: BinaryOp {
                left: Identifier(
                    Ident {
                        value: "properties",
                        quote_style: None,
                    },
                ),
                op: LongArrow,
                right: Value(
                    SingleQuotedString(
                        "firstname",
                    ),
                ),
            },
            alias: Ident {
                value: "firstname",
                quote_style: None,
            },
        },
        ExprWithAlias {
            expr: BinaryOp {
                left: Identifier(
                    Ident {
                        value: "properties",
                        quote_style: None,
                    },
                ),
                op: LongArrow,
                right: Value(
                    SingleQuotedString(
                        "lastname",
                    ),
                ),
            },
            alias: Ident {
                value: "lastname",
                quote_style: None,
            },
        },
        ExprWithAlias {
            expr: BinaryOp {
                left: Identifier(
                    Ident {
                        value: "properties",
                        quote_style: None,
                    },
                ),
                op: LongArrow,
                right: Value(
                    SingleQuotedString(
                        "email",
                    ),
                ),
            },
            alias: Ident {
                value: "email",
                quote_style: None,
            },
        },
    ],
    into: None,
    from: [
        TableWithJoins {
            relation: Table {
                name: ObjectName(
                    [
                        Ident {
                            value: "postgres",
                            quote_style: Some(
                                '"',
                            ),
                        },
                        Ident {
                            value: "warehouse",
                            quote_style: Some(
                                '"',
                            ),
                        },
                        Ident {
                            value: "hubspot__contacts",
                            quote_style: Some(
                                '"',
                            ),
                        },
                    ],
                ),
                alias: None,
                args: None,
                with_hints: [],
                version: None,
                partitions: [],
            },
            joins: [],
        },
    ],
    lateral_views: [],
    selection: None,
    group_by: Expressions(
        [],
    ),
    cluster_by: [],
    distribute_by: [],
    sort_by: [],
    having: None,
    named_window: [],
    qualify: None,
    window_before_qualify: false,
    value_table_mode: None,
    connect_by: None,
}
[src/main.rs:15:5] &s = "extract_from_hubspot"
[src/main.rs:17:5] &x = "extract_from_hubspot"
[src/main.rs:15:5] &s = "hubspot__contacts"
[src/main.rs:17:5] &x = "hubspot__contacts"
[src/main.rs:145:17] &select = Select {
    distinct: None,
    top: None,
    projection: [
        UnnamedExpr(
            CompoundIdentifier(
                [
                    Ident {
                        value: "hubspot_contacts",
                        quote_style: None,
                    },
                    Ident {
                        value: "email",
                        quote_style: None,
                    },
                ],
            ),
        ),
        ExprWithAlias {
            expr: IsNotNull(
                CompoundIdentifier(
                    [
                        Ident {
                            value: "merged_veeva",
                            quote_style: None,
                        },
                        Ident {
                            value: "user_id",
                            quote_style: None,
                        },
                    ],
                ),
            ),
            alias: Ident {
                value: "veeva_claims_user",
                quote_style: None,
            },
        },
        ExprWithAlias {
            expr: CompoundIdentifier(
                [
                    Ident {
                        value: "merged_veeva",
                        quote_style: None,
                    },
                    Ident {
                        value: "claim_id",
                        quote_style: None,
                    },
                ],
            ),
            alias: Ident {
                value: "veeva_claim_id",
                quote_style: None,
            },
        },
    ],
    into: None,
    from: [
        TableWithJoins {
            relation: Table {
                name: ObjectName(
                    [
                        Ident {
                            value: "postgres",
                            quote_style: Some(
                                '"',
                            ),
                        },
                        Ident {
                            value: "warehouse",
                            quote_style: Some(
                                '"',
                            ),
                        },
                        Ident {
                            value: "extract_from_hubspot",
                            quote_style: Some(
                                '"',
                            ),
                        },
                    ],
                ),
                alias: Some(
                    TableAlias {
                        name: Ident {
                            value: "hubspot_contacts",
                            quote_style: None,
                        },
                        columns: [],
                    },
                ),
                args: None,
                with_hints: [],
                version: None,
                partitions: [],
            },
            joins: [
                Join {
                    relation: Table {
                        name: ObjectName(
                            [
                                Ident {
                                    value: "postgres",
                                    quote_style: Some(
                                        '"',
                                    ),
                                },
                                Ident {
                                    value: "warehouse",
                                    quote_style: Some(
                                        '"',
                                    ),
                                },
                                Ident {
                                    value: "merge_veeva_sources",
                                    quote_style: Some(
                                        '"',
                                    ),
                                },
                            ],
                        ),
                        alias: Some(
                            TableAlias {
                                name: Ident {
                                    value: "merged_veeva",
                                    quote_style: None,
                                },
                                columns: [],
                            },
                        ),
                        args: None,
                        with_hints: [],
                        version: None,
                        partitions: [],
                    },
                    join_operator: LeftOuter(
                        On(
                            BinaryOp {
                                left: CompoundIdentifier(
                                    [
                                        Ident {
                                            value: "merged_veeva",
                                            quote_style: None,
                                        },
                                        Ident {
                                            value: "email",
                                            quote_style: None,
                                        },
                                    ],
                                ),
                                op: Eq,
                                right: CompoundIdentifier(
                                    [
                                        Ident {
                                            value: "hubspot_contacts",
                                            quote_style: None,
                                        },
                                        Ident {
                                            value: "email",
                                            quote_style: None,
                                        },
                                    ],
                                ),
                            },
                        ),
                    ),
                },
            ],
        },
    ],
    lateral_views: [],
    selection: None,
    group_by: Expressions(
        [],
    ),
    cluster_by: [],
    distribute_by: [],
    sort_by: [],
    having: None,
    named_window: [],
    qualify: None,
    window_before_qualify: false,
    value_table_mode: None,
    connect_by: None,
}
[src/main.rs:15:5] &s = "merge_veeva_and_hubspot"
[src/main.rs:17:5] &x = "merge_veeva_and_hubspot"
[src/main.rs:15:5] &s = "extract_from_hubspot"
[src/main.rs:17:5] &x = "extract_from_hubspot"
[src/main.rs:15:5] &s = "merge_veeva_and_hubspot"
[src/main.rs:17:5] &x = "merge_veeva_and_hubspot"
[src/main.rs:15:5] &s = "merge_veeva_sources"
[src/main.rs:17:5] &x = "merge_veeva_sources"
[src/main.rs:145:17] &select = Select {
    distinct: None,
    top: None,
    projection: [
        ExprWithAlias {
            expr: CompoundIdentifier(
                [
                    Ident {
                        value: "claims",
                        quote_style: None,
                    },
                    Ident {
                        value: "id",
                        quote_style: None,
                    },
                ],
            ),
            alias: Ident {
                value: "claim_id",
                quote_style: None,
            },
        },
        ExprWithAlias {
            expr: CompoundIdentifier(
                [
                    Ident {
                        value: "users",
                        quote_style: None,
                    },
                    Ident {
                        value: "id",
                        quote_style: None,
                    },
                ],
            ),
            alias: Ident {
                value: "user_id",
                quote_style: None,
            },
        },
        ExprWithAlias {
            expr: CompoundIdentifier(
                [
                    Ident {
                        value: "users",
                        quote_style: None,
                    },
                    Ident {
                        value: "email__sys",
                        quote_style: None,
                    },
                ],
            ),
            alias: Ident {
                value: "email",
                quote_style: None,
            },
        },
    ],
    into: None,
    from: [
        TableWithJoins {
            relation: Table {
                name: ObjectName(
                    [
                        Ident {
                            value: "postgres",
                            quote_style: Some(
                                '"',
                            ),
                        },
                        Ident {
                            value: "warehouse",
                            quote_style: Some(
                                '"',
                            ),
                        },
                        Ident {
                            value: "veeva__claim__v",
                            quote_style: Some(
                                '"',
                            ),
                        },
                    ],
                ),
                alias: Some(
                    TableAlias {
                        name: Ident {
                            value: "claims",
                            quote_style: None,
                        },
                        columns: [],
                    },
                ),
                args: None,
                with_hints: [],
                version: None,
                partitions: [],
            },
            joins: [
                Join {
                    relation: Table {
                        name: ObjectName(
                            [
                                Ident {
                                    value: "postgres",
                                    quote_style: Some(
                                        '"',
                                    ),
                                },
                                Ident {
                                    value: "warehouse",
                                    quote_style: Some(
                                        '"',
                                    ),
                                },
                                Ident {
                                    value: "veeva__user__sys",
                                    quote_style: Some(
                                        '"',
                                    ),
                                },
                            ],
                        ),
                        alias: Some(
                            TableAlias {
                                name: Ident {
                                    value: "users",
                                    quote_style: None,
                                },
                                columns: [],
                            },
                        ),
                        args: None,
                        with_hints: [],
                        version: None,
                        partitions: [],
                    },
                    join_operator: LeftOuter(
                        On(
                            BinaryOp {
                                left: CompoundIdentifier(
                                    [
                                        Ident {
                                            value: "users",
                                            quote_style: None,
                                        },
                                        Ident {
                                            value: "id",
                                            quote_style: None,
                                        },
                                    ],
                                ),
                                op: Eq,
                                right: CompoundIdentifier(
                                    [
                                        Ident {
                                            value: "claims",
                                            quote_style: None,
                                        },
                                        Ident {
                                            value: "created_by__v",
                                            quote_style: None,
                                        },
                                    ],
                                ),
                            },
                        ),
                    ),
                },
            ],
        },
    ],
    lateral_views: [],
    selection: None,
    group_by: Expressions(
        [],
    ),
    cluster_by: [],
    distribute_by: [],
    sort_by: [],
    having: None,
    named_window: [],
    qualify: None,
    window_before_qualify: false,
    value_table_mode: None,
    connect_by: None,
}
[src/main.rs:15:5] &s = "merge_veeva_sources"
[src/main.rs:17:5] &x = "merge_veeva_sources"
[src/main.rs:15:5] &s = "veeva__claim__v"
[src/main.rs:17:5] &x = "veeva__claim__v"
[src/main.rs:15:5] &s = "merge_veeva_sources"
[src/main.rs:17:5] &x = "merge_veeva_sources"
[src/main.rs:15:5] &s = "veeva__user__sys"
[src/main.rs:17:5] &x = "veeva__user__sys"

[nix-shell:~/prog/wayfare]$ 
